# -*- coding: utf-8 -*-
"""dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11n3-CWwnzd5eA0C_dcAiZbRvaWkTH4rC
"""

# =========================
# SETUP
# =========================

# Install dependencies
!pip install gluonts pandas numpy datasets pyarrow -q

# Import common libraries
import pandas as pd
import numpy as np
import os

# Create folder to save outputs
os.makedirs("datasets_csv", exist_ok=True)

print("Setup done ✅")

# =========================
# M4 Monthly
# =========================

# Import
from gluonts.dataset.repository.datasets import get_dataset

# Download
m4_dataset = get_dataset("m4_monthly")

# Extract and process
train_list = []
for i, entry in enumerate(m4_dataset.train):
    if i >= 100:  # Only 100 samples
        break
    ts = entry['target']
    id_ = entry['item_id']
    df = pd.DataFrame({
        'id': [id_] * len(ts),
        'value': ts,
        'timestamp': pd.date_range(start=entry['start'].to_timestamp(), periods=len(ts), freq='M')
    })
    train_list.append(df)

# Combine
m4_monthly_df = pd.concat(train_list, ignore_index=True)

# Save
m4_monthly_df.to_csv("datasets_csv/m4_monthly.csv", index=False)
print("Saved M4 monthly dataset ✅")

# =========================
# GluonTS Datasets
# =========================

# Function to download and save GluonTS dataset
def save_gluonts_dataset(name, filename_prefix):
    from gluonts.dataset.repository.datasets import get_dataset

    dataset = get_dataset(name)
    dfs = []
    count = 0
    for entry in dataset.train:
        if count >= 100:  # 100 samples only
            break
        ts = entry['target']
        id_ = entry['item_id']
        df = pd.DataFrame({
            'id': [id_] * len(ts),
            'value': ts,
            'timestamp': pd.date_range(start=entry['start'].to_timestamp(), periods=len(ts), freq='H')
        })
        dfs.append(df)
        count += 1
    final_df = pd.concat(dfs, ignore_index=True)
    final_df.to_csv(f"datasets_csv/{filename_prefix}.csv", index=False)
    print(f"Saved {filename_prefix} dataset ✅")

# Download and Save
save_gluonts_dataset("electricity", "gluonts_electricity")
save_gluonts_dataset("traffic", "gluonts_traffic")
save_gluonts_dataset("exchange_rate", "gluonts_exchange_rate")

# =========================
# ETTm2 Dataset
# =========================

# Import
import pandas as pd

# Download the ETTm2 dataset
!wget -q https://raw.githubusercontent.com/zhouhaoyi/ETDataset/main/ETT-small/ETTm2.csv -P datasets_csv/

# Load
ett_df = pd.read_csv("datasets_csv/ETTm2.csv")
ett_df['date'] = pd.to_datetime(ett_df['date'])

# Resample to Monthly mean
ett_monthly = ett_df.set_index('date').resample('M').mean().reset_index()

# Take first 100 timestamps for simplicity
ett_monthly_sampled = ett_monthly.head(100)

# Save
ett_monthly_sampled.to_csv("datasets_csv/ettm2_monthly.csv", index=False)
print("Saved ETTm2 monthly dataset ✅")

# =========================
# BIGDATA22 (Simulated)
# =========================

# Import
import numpy as np
import pandas as pd

# Simulate stock price data
dates = pd.date_range(start='2010-01-01', end='2020-12-31', freq='B')  # Business days
np.random.seed(42)

stocks = [f'Stock{i}' for i in range(5)]  # Simulate 5 stock series
data = {stock: 100 + np.cumsum(np.random.randn(len(dates))) for stock in stocks}
bigdata_df = pd.DataFrame(data, index=dates)

# Resample to Monthly
bigdata_monthly = bigdata_df.resample('M').last().reset_index()

# Melt into long format
bigdata_monthly_melted = bigdata_monthly.melt(id_vars=['index'], var_name='id', value_name='value')
bigdata_monthly_melted.rename(columns={'index': 'timestamp'}, inplace=True)

# Take 100 rows
bigdata_monthly_sampled = bigdata_monthly_melted.head(100)

# Save
bigdata_monthly_sampled.to_csv("datasets_csv/bigdata22_monthly.csv", index=False)
print("Saved BIGDATA22 monthly dataset ✅")

# =========================
# Weather Dataset
# =========================

# Import
import pandas as pd

# Download sample weather data
!wget -q https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv -P datasets_csv/

# Load
weather_df = pd.read_csv("datasets_csv/daily-min-temperatures.csv")
weather_df['Date'] = pd.to_datetime(weather_df['Date'])

# Resample to Monthly mean
weather_monthly = weather_df.set_index('Date').resample('M').mean().reset_index()

# Take first 100 rows
weather_monthly_sampled = weather_monthly.head(100)

# Save
weather_monthly_sampled.to_csv("datasets_csv/weather_monthly.csv", index=False)
print("Saved Weather monthly dataset ✅")